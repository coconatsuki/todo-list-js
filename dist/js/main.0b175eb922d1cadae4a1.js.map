{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.js","webpack:///./src/images/coffee-note.jpg","webpack:///./src/js/ui.js","webpack:///./src/js/display.js","webpack:///./src/js/list.js","webpack:///./src/js/task.js","webpack:///./src/js/node.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","_jquery","_interopRequireDefault","_ui","_display","_list","_task","_node","listNumber","allLists","saveAllListsObject","rebuildAllLists","addListenersToLoadedTasks","getCurrentList","updateTask","taskRemoveListener","addAllListenersToNewTask","createTask","removeButtonListener","addAllListenersToNewList","createNewList","createNewListFromEvent","Controller","jsonAllLists","JSON","stringify","map","list","listObject","localStorage","setItem","listObjects","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_loop","id","tasks","find","li","tasksArray","listId","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","task","newTask","Task","date","hour","priority","description","err","return","rebuildTasks","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Ui","getCurrentListId","editedValues","getEditedValues","taskId","Node","editModal","dataset","taskid","taskList","tasklist","Display","updateTaskHtml","currentTask","Number","updateAllLists","default","modal","taskElement","currentList","getTask","taskIndex","indexOf","parentNode","removeChild","newEditButton","addEventListener","ta","fillEditModalwithTaskValues","changeModalDatasetWithCurrentTask","removeCheckbox","taskValues","getNewTaskValues","taskNumber","getNewTask","newRow","render","displayNewTask","addTask","addTaskToList","cleanModal","currentListElement","newList","listIndex","document","getElementById","disabled","removeListFromAllLists","tableBody","innerHTML","switchActiveList","displayListTasks","removeButton","listElementBin","listElement","addListenerToNewRemoveListButton","event","preventDefault","target","className","addListenerToSwitchList","getNewListName","closeModalNewList","addListenerToListButton","newListButton","addListForm","addListenerToCreateTask","newTaskButton","addListenerToUpdateModal","updateButton","rebuildLists","getItem","parse","firstListElement","listGroup","querySelector","firstList","arguments","listName","List","displayNewList","addNewListToAllLists","dateInput","hourInput","checkedPriorityInput","descriptionInput","editDateInput","editHourInput","editCheckedPriorityInput","editDescriptionInput","currrentActiveList","getTaskId","getTaskList","concat","activeList","classList","remove","add","cleanEditModal","setAttribute","newListInput","appendChild","forEach","row","taskDate","taskHour","taskDescription","taskPriority","textContent","options","_classCallCheck","this","taskObject","createElement","_ref","dateString","hourString","descriptionString","priorityString","setPriority","eraseOptionString","taskModalButton","editTaskButtons","removeTaskCheckboxes","querySelectorAll","addTaskForm","updateTaskForm","listElements"],"mappings":"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","file":"./js/main.0b175eb922d1cadae4a1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([126,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import '@babel/polyfill'; // import polyfills for unsupported ES6 methods in old browsers. Babel only cares about syntax, not methods.\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\nimport './../main.scss'; // To take the css from /src into /dist, it's necessary to import it here first,\r\n// so that css-loader (or style-loader) can be able to load it and make it available to the extract plugin\r\n// which will extract it from here to make a separate css file, or put it in the html head.\r\nimport './../images/coffee-note.jpg';\r\nimport Ui from './ui';\r\nimport Display from './display';\r\nimport List from './list';\r\nimport Task from './task';\r\nimport Node from './node';\r\n\r\nconst Controller = (() => {\r\n  let listNumber = 1;\r\n  let allLists = [];\r\n\r\n  // LOCAL STORAGE METHODS\r\n\r\n  const allListsObject = () => (allLists.map(list => list.listObject()));\r\n\r\n  const saveAllListsObject = () => {\r\n    const jsonAllLists = JSON.stringify(allListsObject());\r\n    localStorage.setItem('jsonAllLists', jsonAllLists);\r\n  };\r\n\r\n  const loadAllListsObject = () => {\r\n    const jsonAllLists = localStorage.getItem('jsonAllLists');\r\n    return JSON.parse(jsonAllLists);\r\n  };\r\n\r\n  // -------------------------- REBUILD METHODS -------------------------- \\\\\r\n\r\n  const rebuildTasks = (tasksArray, listId) => {\r\n    const tasks = [];\r\n    for (const task of tasksArray) {\r\n      const newTask = new Task({\r\n        list: listId,\r\n        date: task.date,\r\n        hour: task.hour,\r\n        priority: task.priority,\r\n        description: task.description,\r\n        id: task.id,\r\n      });\r\n      tasks.push(newTask);\r\n    }\r\n    return tasks;\r\n  };\r\n\r\n  const rebuildAllLists = (listObjects) => {\r\n    for (const list of listObjects) {\r\n      createNewList(list.name, list.id);\r\n      if (list.tasks.length > 0) {\r\n        const currentList = allLists.find(li => li.id === list.id);\r\n        currentList.tasks = rebuildTasks(list.tasks, list.id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addListenersToLoadedTasks = (tasks) => {\r\n    for (const task of tasks) {\r\n      addAllListenersToNewTask(task);\r\n    }\r\n  };\r\n\r\n  const rebuildLists = () => {\r\n    allLists = [];\r\n    const listObjects = loadAllListsObject();\r\n    if (listObjects && listObjects.length > 0) {\r\n      rebuildAllLists(listObjects);\r\n      const firstListElement = Node.listGroup.querySelector('.list-group-item:first-child');\r\n      const firstList = allLists.find(list => list.id === Number(firstListElement.dataset.id));\r\n      Ui.switchActiveList(firstList);\r\n      Display.displayListTasks(allLists[0]);\r\n      addListenersToLoadedTasks(allLists[0].tasks);\r\n    } else {\r\n      createNewList();\r\n    }\r\n  };\r\n\r\n  // Find List & Task in allLists + get Task values (back-end)\r\n\r\n  const getCurrentList = () => {\r\n    const listId = Ui.getCurrentListId();\r\n    return allLists.find(list => list.id === listId);\r\n  };\r\n\r\n  const getTask = (taskList, taskId) => {\r\n    const currentList = allLists.find(list => list.id === taskList);\r\n    return currentList.tasks.find(task => task.id === taskId);\r\n  };\r\n\r\n    // ------------------ UPDATE TASK METHODS ----------------------------- \\\\\r\n\r\n  const updateAllLists = (taskId, editedValues) => {\r\n    const currentList = getCurrentList();\r\n    const currentTask = currentList.tasks.find(task => task.id === Number(taskId));\r\n    currentTask.date = editedValues.date;\r\n    currentTask.hour = editedValues.hour;\r\n    currentTask.description = editedValues.description;\r\n    currentTask.priority = editedValues.priority;\r\n  };\r\n\r\n  const updateTask = () => {\r\n    const editedValues = Ui.getEditedValues();\r\n    const taskId = Node.editModal.dataset.taskid;\r\n    const taskList = Node.editModal.dataset.tasklist;\r\n    Display.updateTaskHtml(editedValues, taskId, taskList);\r\n    updateAllLists(taskId, editedValues);\r\n    $('#edit-task-modal').modal('toggle');\r\n    saveAllListsObject();\r\n  };\r\n\r\n  const addListenerToUpdateModal = () => {\r\n    Node.updateButton.addEventListener('click', updateTask);\r\n  };\r\n\r\n  // ------------------ ADD A NEW TASK METHODS ----------------------------- \\\\\r\n\r\n  // Listeners on new tasks (remove & edit buttons)\r\n\r\n  const taskRemoveListener = (taskId, taskList, taskElement) => (\r\n    () => {\r\n      const currentList = getCurrentList();\r\n      const currentTask = getTask(taskList, taskId);\r\n      const taskIndex = currentList.tasks.indexOf(currentTask);\r\n      currentList.tasks.splice(taskIndex, 1);\r\n      taskElement.parentNode.removeChild(taskElement);\r\n      saveAllListsObject();\r\n    }\r\n  );\r\n\r\n  const addListenerToNewRemoveTaskCheckbox = (taskId, taskList) => {\r\n    const taskElement = Node.taskElement(taskId, taskList);\r\n    const removeCheckbox = Node.removeCheckbox(taskElement);\r\n    removeCheckbox.addEventListener('click', taskRemoveListener(taskId, taskList, taskElement));\r\n  };\r\n\r\n  const addListenerToNewEditTaskButton = function(task) {\r\n    Node.newEditButton().addEventListener('click', () => {\r\n      const currentTask = allLists.find(li => li.id === task.list).tasks.find(ta => ta.id === task.id);\r\n      Ui.fillEditModalwithTaskValues(currentTask);\r\n      Ui.changeModalDatasetWithCurrentTask(currentTask.id, currentTask.list);\r\n    });\r\n  };\r\n\r\n  const addAllListenersToNewTask = (newTask) => {\r\n    addListenerToNewEditTaskButton(newTask);\r\n    addListenerToNewRemoveTaskCheckbox(newTask.id, newTask.list);\r\n  };\r\n\r\n  // Listeners on \"Create new Task Modal\" (button and form)\r\n\r\n  const addTaskToList = (currentList, newTask) => {\r\n    currentList.addTask(newTask);\r\n  };\r\n\r\n  const getNewTask = (currentList) => {\r\n    const taskValues = Ui.getNewTaskValues(currentList.id, currentList.taskNumber);\r\n    const newTask = new Task(taskValues);\r\n    return newTask;\r\n  };\r\n\r\n  const createTask = () => {\r\n    const currentList = getCurrentList();\r\n    const newTask = getNewTask(currentList);\r\n    const newRow = newTask.render();\r\n    Display.displayNewTask(newTask, newRow);\r\n    addTaskToList(currentList, newTask);\r\n    addAllListenersToNewTask(newTask);\r\n    Ui.cleanModal();\r\n    saveAllListsObject();\r\n  };\r\n\r\n  const addListenerToCreateTask = () => {\r\n    Node.newTaskButton.addEventListener('click', createTask);\r\n  };\r\n\r\n  // ------------------ ADD A NEW LIST METHODS ----------------------------- \\\\\r\n\r\n  // Remove new List listener\r\n\r\n  const removeListFromAllLists = (newList) => {\r\n    const listIndex = allLists.indexOf(newList);\r\n    allLists.splice(listIndex, 1);\r\n    if (allLists.length === 0) {\r\n      document.getElementById('task-modal-button').disabled = true;\r\n    }\r\n  };\r\n\r\n  const removeButtonListener = (currentListElement, newList) => (\r\n    () => {\r\n      currentListElement.parentNode.removeChild(currentListElement);\r\n      removeListFromAllLists(newList);\r\n      Node.tableBody.innerHTML = '';\r\n      if (allLists.length > 0) {\r\n        Ui.switchActiveList(allLists[0]);\r\n        Display.displayListTasks(allLists[0]);\r\n        addListenersToLoadedTasks(allLists[0].tasks);\r\n      }\r\n      saveAllListsObject();\r\n    }\r\n  );\r\n\r\n  const addListenerToNewRemoveListButton = function(newList) {\r\n    const removeButton = Ui.listElementBin(newList);\r\n    const currentListElement = Ui.listElement(newList);\r\n    removeButton.addEventListener('click', removeButtonListener(currentListElement, newList));\r\n  };\r\n\r\n  // Switch list listener\r\n\r\n  const addListenerToSwitchList = (newList) => {\r\n    Ui.listElement(newList).addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      if (event.target.className === 'bin') { return; }\r\n      Display.displayListTasks(newList);\r\n      addListenersToLoadedTasks(newList.tasks);\r\n      Ui.switchActiveList(newList);\r\n    });\r\n  };\r\n\r\n  const addAllListenersToNewList = (newList) => {\r\n    addListenerToNewRemoveListButton(newList);\r\n    addListenerToSwitchList(newList);\r\n  };\r\n\r\n  // Add new list\r\n\r\n  const addNewListToAllLists = (newList) => {\r\n    listNumber += 1;\r\n    allLists.push(newList);\r\n  };\r\n\r\n  const createNewList = (name = 'Everything', listId = listNumber) => {\r\n    const listName = name;\r\n    const newList = new List({ id: listId, name: listName });\r\n    Display.displayNewList(newList.render());\r\n    addNewListToAllLists(newList);\r\n    addAllListenersToNewList(newList);\r\n    Ui.switchActiveList(newList);\r\n    document.getElementById('task-modal-button').disabled = false;\r\n    return newList;\r\n  };\r\n\r\n  const createNewListFromEvent = (event) => {\r\n    event.preventDefault();\r\n    const newList = createNewList(Ui.getNewListName());\r\n    Display.displayListTasks(newList);\r\n    saveAllListsObject();\r\n    Display.closeModalNewList();\r\n  };\r\n\r\n  const addListenerToListButton = function() {\r\n    Node.newListButton.addEventListener('click', createNewListFromEvent);\r\n    Node.addListForm.addEventListener('submit', createNewListFromEvent);\r\n  };\r\n\r\n  return {\r\n    addListenerToListButton,\r\n    addListenerToCreateTask,\r\n    addListenerToUpdateModal,\r\n    rebuildLists,\r\n    createNewList,\r\n  };\r\n})();\r\n\r\nController.rebuildLists();\r\nController.addListenerToListButton();\r\nController.addListenerToCreateTask();\r\nController.addListenerToUpdateModal();\r\n","module.exports = __webpack_public_path__ + \"./images/8c2f96b50920af94a4c0951222d3264a-coffee-note.jpg\";","const Ui = (() => {\r\n  const newListInput = () => (document.getElementById('list-name'));\r\n  const dateInput = () => (document.getElementById('task-date'));\r\n  const hourInput = () => (document.getElementById('task-hour'));\r\n  const checkedPriorityInput = () => (document.querySelector('input[name=\"priorityRadios\"]:checked'));\r\n  const descriptionInput = () => (document.getElementById('task-description'));\r\n\r\n  const editDateInput = () => (document.getElementById('edit-task-date'));\r\n  const editHourInput = () => (document.getElementById('edit-task-hour'));\r\n  const editCheckedPriorityInput = () => (document.querySelector('input[name=\"edit-priorityRadios\"]:checked'));\r\n  const editDescriptionInput = () => (document.getElementById('edit-task-description'));\r\n\r\n  const editModal = document.getElementById('edit-task-modal');\r\n  const listElement = newList => (document.querySelector(`#list-group [data-id='${newList.id}']`));\r\n  const listElementBin = newList => (listElement(newList).querySelector('.bin'));\r\n  const currrentActiveList = () => (document.querySelector('#list-group .active'));\r\n  const getCurrentListId = () => Number(document.querySelector('.lists-sidebar .list-group-item.active').dataset.id);\r\n  const getNewListName = () => newListInput().value;\r\n\r\n  // Get Values from the inputs:\r\n\r\n  const getNewTaskValues = (taskList, taskId) => {\r\n    const date = dateInput().value;\r\n    const hour = hourInput().value;\r\n    const priority = checkedPriorityInput().value;\r\n    const description = descriptionInput().value;\r\n    return {\r\n      date,\r\n      hour,\r\n      description,\r\n      priority,\r\n      id: taskId,\r\n      list: taskList,\r\n    };\r\n  };\r\n\r\n  const getEditedValues = () => {\r\n    const date = editDateInput().value;\r\n    const hour = editHourInput().value;\r\n    const priority = editCheckedPriorityInput().value;\r\n    const description = editDescriptionInput().value;\r\n    return {\r\n      date, hour, description, priority,\r\n    };\r\n  };\r\n\r\n  // useful for the Edit Task Button:\r\n\r\n  const cleanModal = () => {\r\n    dateInput().value = '';\r\n    hourInput().value = '';\r\n    checkedPriorityInput().value = '';\r\n    descriptionInput().value = '';\r\n  };\r\n\r\n  const cleanEditModal = () => {\r\n    editDateInput().value = '';\r\n    editHourInput().value = '';\r\n    editCheckedPriorityInput().value = '';\r\n    editDescriptionInput().value = '';\r\n  };\r\n\r\n  const fillEditModalwithTaskValues = (task) => {\r\n    editDateInput().value = task.date;\r\n    editHourInput().value = task.hour;\r\n    editCheckedPriorityInput().value = task.priority;\r\n    editDescriptionInput().value = task.description;\r\n  };\r\n\r\n  const changeModalDatasetWithCurrentTask = (taskId, taskList) => {\r\n    editModal.setAttribute('data-taskid', taskId);\r\n    editModal.setAttribute('data-tasklist', taskList);\r\n  };\r\n\r\n  const switchActiveList = (newList) => {\r\n    const activeList = currrentActiveList();\r\n    if (activeList) {\r\n      activeList.classList.remove('active');\r\n    }\r\n    listElement(newList).classList.add('active');\r\n  };\r\n\r\n  // Find Task id and list in HTML\r\n\r\n  const getTaskId = function(taskElement) {\r\n    return Number(taskElement.dataset.id);\r\n  };\r\n\r\n  const getTaskList = function(taskElement) {\r\n    return Number(taskElement.dataset.list);\r\n  };\r\n\r\n  return {\r\n    getTaskId,\r\n    getTaskList,\r\n    getNewListName,\r\n    listElement,\r\n    listElementBin,\r\n    currrentActiveList,\r\n    switchActiveList,\r\n    getEditedValues,\r\n    cleanModal,\r\n    cleanEditModal,\r\n    getCurrentListId,\r\n    getNewTaskValues,\r\n    fillEditModalwithTaskValues,\r\n    changeModalDatasetWithCurrentTask,\r\n  };\r\n})();\r\n\r\nexport default Ui;\r\n","import $ from 'jquery';\r\n\r\nconst Display = (() => {\r\n  const listGroup = document.getElementById('list-group');\r\n  const newListInput = document.getElementById('list-name');\r\n  const tableBody = document.getElementById('task-table-body');\r\n\r\n  const displayNewList = function(listElement, event) {\r\n    listGroup.appendChild(listElement);\r\n    newListInput.value = '';\r\n  };\r\n\r\n  const closeModalNewList = () => ($('#listModal').modal('toggle'));\r\n\r\n  const displayListTasks = function(newList) {\r\n    tableBody.innerHTML = '';\r\n    newList.tasks.forEach((task) => {\r\n      tableBody.appendChild(task.render());\r\n    });\r\n  };\r\n\r\n  const displayNewTask = (task, row) => {\r\n    tableBody.appendChild(row);\r\n    $('#taskModal').modal('toggle');\r\n  };\r\n\r\n  const updateTaskHtml = (editedValues, taskId, taskList) => {\r\n    const taskDate = document.querySelector(`[data-id=\"${taskId}\"][data-list =\"${taskList}\"] th`);\r\n    const taskHour = document.querySelector(`[data-id=\"${taskId}\"][data-list =\"${taskList}\"] td:nth-child(1n)`);\r\n    const taskDescription = document.querySelector(`[data-id=\"${taskId}\"][data-list =\"${taskList}\"] td:nth-child(3n)`);\r\n    const taskPriority = document.querySelector(`[data-id=\"${taskId}\"][data-list =\"${taskList}\"] td:nth-child(4n)`);\r\n    taskDate.textContent = editedValues.date;\r\n    taskHour.textContent = editedValues.hour;\r\n    taskDescription.innerHTML = `<strong>${editedValues.description}</strong>`;\r\n    taskPriority.textContent = editedValues.priority;\r\n  };\r\n\r\n  return {\r\n    displayNewList,\r\n    displayListTasks,\r\n    displayNewTask,\r\n    updateTaskHtml,\r\n    closeModalNewList,\r\n  };\r\n})();\r\n\r\nexport default Display;\r\n","class List {\r\n  constructor(options = {}) {\r\n    this.tasks = [];\r\n    this.id = options.id;\r\n    this.name = options.name;\r\n    this.taskNumber = options.taskNumber || 1;\r\n  }\r\n\r\n  addTask(task) {\r\n    this.tasks.push(task);\r\n    this.taskNumber += 1;\r\n  }\r\n\r\n  listObject() {\r\n    return {\r\n      tasks: this.tasks.map(task => (task.taskObject())),\r\n      id: this.id,\r\n      name: this.name,\r\n      taskNumber: this.taskNumber,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const newList = document.createElement('li');\r\n    newList.classList.add('list-group-item');\r\n    newList.classList.add('list-group-item-action');\r\n    newList.innerHTML = `<a href=\"#\">${this.name}</a><i class=\"bin\"></i>`;\r\n    newList.setAttribute('data-id', this.id);\r\n    return newList;\r\n  }\r\n\r\n  // renderListandTasks() {\r\n  //   const li = this.render;\r\n  //   this.tasks.forEach((task) => {\r\n  //     li.appendChild(task.render);\r\n  //   });\r\n  //   return li;\r\n  // }\r\n}\r\n\r\nexport default List;\r\n","class Task {\r\n  constructor({\n    date, hour, description, priority, list, id,\n  }) {\r\n    this.date = date;\r\n    this.hour = hour;\r\n    this.description = description;\r\n    this.priority = priority;\r\n    this.list = list;\r\n    this.id = id;\r\n  }\r\n\r\n  taskObject() {\r\n    return {\r\n      date: this.date,\r\n      hour: this.hour,\r\n      description: this.description,\r\n      priority: this.priority,\r\n      list: this.list,\r\n      id: this.id,\r\n    };\r\n  }\r\n\r\n  setPriority() {\r\n    if (this.priority === 'Moderate') {\r\n      return '<td class=\"flag-field\"><i class=\"orange-flag\"></i></td>';\r\n    } else if (this.priority === 'High') {\r\n      return '<td class=\"flag-field\"><i class=\"red-flag\"></i></td>';\r\n    } else if (this.priority === 'Low') {\r\n      return '<td class=\"flag-field\"><i class=\"green-flag\"></i></td>';\r\n    }\r\n    return '<td class=\"flag-field\"><i class=\"orange-flag\"></i></td>';\r\n  }\r\n\r\n  render() {\r\n    const newRow = document.createElement('tr');\r\n    const dateString = `<td>${this.date}</th>`;\r\n    const hourString = `<td>${this.hour}</td>`;\r\n    const descriptionString = `<td><strong>${this.description}</strong></td>`;\r\n    const priorityString = this.setPriority();\r\n    const eraseOptionString = `<td><div class=\"form-check form-check-inline d-flex justify-content-around\">\r\n    <input class=\"form-check-input remove-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\r\n    <i class=\"bin\"></i></div></td>`;\r\n    const editString = `<td class=\"edit-column\">\r\n    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#edit-task-modal\">\r\n    <i></i></button></td>`;\r\n    newRow.innerHTML = dateString + hourString + descriptionString +\r\n    priorityString + eraseOptionString + editString;\r\n    newRow.setAttribute('data-id', this.id);\r\n    newRow.setAttribute('data-list', this.list);\r\n    return newRow;\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","const Node = (() => {\r\n  const listGroup = document.getElementById('list-group');\r\n  const tableBody = document.getElementById('task-table-body');\r\n  const newListButton = document.getElementById('new-list-button');\r\n  const addListForm = document.getElementById('add-list-form');\r\n  const taskModalButton = document.getElementById('task-modal-button');\r\n  const newTaskButton = document.getElementById('add-new-task-button');\r\n  const editTaskButtons = document.querySelectorAll('.edit-column button');\r\n  const updateButton = document.getElementById('update-task-button');\r\n  const removeTaskCheckboxes = document.querySelectorAll('.remove-input');\r\n  const editModal = document.getElementById('edit-task-modal');\r\n  const addTaskForm = document.getElementById('add-task-form');\r\n  const updateTaskForm = document.getElementById('update-task-form');\r\n\r\n  const newListInput = document.getElementById('list-name');\r\n\r\n  const newEditButton = () => (document.querySelector('#task-table-body tr:last-child .edit-column button'));\r\n  const listElements = () => (document.querySelectorAll('#list-group .list-group-item'));\r\n  const taskElement = (taskId, taskList) => (document.querySelector(`[data-id=\"${taskId}\"][data-list =\"${taskList}\"]`));\r\n  const removeCheckbox = task => (task.querySelector('.remove-input'));\r\n\r\n  return {\r\n    tableBody,\r\n    listGroup,\r\n    newListButton,\r\n    newTaskButton,\r\n    addListForm,\r\n    addTaskForm,\r\n    updateTaskForm,\r\n    editTaskButtons,\r\n    updateButton,\r\n    removeTaskCheckboxes,\r\n    taskModalButton,\r\n    editModal,\r\n    listElements,\r\n    newListInput,\r\n    newEditButton,\r\n    taskElement,\r\n    removeCheckbox,\r\n  };\r\n})();\r\n\r\nexport default Node;\r\n"],"sourceRoot":""}